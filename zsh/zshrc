# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="robbyrussell"
ZSH_THEME="af-magic-custom"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git docker docker-compose screen nvm kubectl autojump pyenv)

# Customize to your needs...

# OSX
if [[ `uname` == 'Darwin' ]] ; then
  # CUDA
  cuda_dir="/usr/local/cuda"
  [ -d $cuda_dir ] && \
    export PATH="$cuda_dir/bin":$PATH && \
    export CUDA_HOME="$cuda_dir" && \
    export DYLD_LIBRARY_PATH="$CUDA_HOME/lib:$CUDA_HOME:$CUDA_HOME/extras/CUPTI/lib${DYLD_LIBRARY_PATH:+:${DYLD_LIBRARY_PATH}}"
  [ -n "${DYLD_LIBRARY_PATH}" ] && \
    export LD_LIBRARY_PATH=$DYLD_LIBRARY_PATH
fi

# 256 color support
if [ -n "$TMUX" ]; then
  # For tmux
  export TERM=screen-256color
else
  export TERM=xterm-256color
fi

if [[ -d "~/.dircolors" && ! -L "~/.dircolors" ]] ; then
  eval `dircolors ~/.dircolors`
fi

export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export EDITOR="vim"

# Homebrew
export HOMEBREW_NO_AUTO_UPDATE=1
export PATH="/opt/homebrew/bin":$PATH

# Python
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/shims:$PATH"
command -v pyenv > /dev/null 2>&1 && eval "$(pyenv init -)"
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# Ruby
[ -s "$HOME/.rvm" ] && . "$HOME/.rvm/scripts/rvm"

# Node
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Golang
[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"

# Java
[[ -s "/usr/libexec/java_home" ]] && export JAVA_HOME=$(/usr/libexec/java_home)

# Scala (install from https://www.scala-lang.org/download/)
SCALA_DIR="/usr/local/share/scala"
[[ -s $SCALA_DIR ]] && \
	export SCALA_HOME=$SCALA_DIR/lib && \
	export PATH=$PATH:$SCALA_DIR/bin

source $ZSH/oh-my-zsh.sh

# The next line updates PATH for the Google Cloud SDK.
if [ -f "$HOME/Dev/google-cloud-sdk/path.zsh.inc" ]; then source "$HOME/Dev/google-cloud-sdk/path.zsh.inc"; fi

# The next line enables shell command completion for gcloud.
if [ -f "$HOME/Dev/google-cloud-sdk/completion.zsh.inc" ]; then source "$HOME/Dev/google-cloud-sdk/completion.zsh.inc"; fi

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
